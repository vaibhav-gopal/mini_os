[package]
name = "mini_os"
version = "0.1.0"
edition = "2021"

# Use a premade bootloader (implemented in rust and assembly NOT C code) instead of implementing it outselves
# bootloaders are responsible for initializing the CPU and loading our custom Kernel
# versions 0.11.x of the bootloader crate is broken and 0.10.x requires additional research to work

# Use the volatile library which ensures that read or (only or) writes are not optimized by the compiler
# newer versions are not compatible

# Use the spin crate to be able to use spinlocks which don't require operating system abstractions compared to mutexes (regular)

[dependencies]
bootloader = "0.9.22"
volatile = "0.2.6"
spin = "0.5.2"

[dependencies.lazy_static]
version = "1.0"
features = ["spin_no_std"]